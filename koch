#!/usr/bin/python3.12
from turtle import *
from shared import triangle,distance
from math import pi,sin,cos,atan2
import sys


def angle(p1,p2):
    x1,y1 = p1
    x2,y2 = p2
    x2 -= x1
    y2 -= y1
    theta = atan2(y2,y1)
    theta = (theta + 2*pi)%(2*pi)
    return theta


def midpoint_magic(p1, p2):
    x1, y1 = p1
    x2, y2 = p2

    side_length = distance(p1,p2)
    angle_rad = atan2(y2 - y1, x2 - x1)
    new_angle = angle_rad + pi / 3

    x3 = x1 + side_length * cos(new_angle)
    y3 = y1 + side_length * sin(new_angle)

    return x3,y3


def fractal(p1,p2, iterations):
    if not iterations:
        penup()
        goto(*p1)
        pendown()
        goto(*p2)
        return
    x1,y1 = p1
    x2,y2 = p2
    dx = (x2-x1)/3
    dy = (y2-y1)/3
    a = (x1+dx,y1+dy)
    b = (x1+2*dx,y1+2*dy)
    c = midpoint_magic(a,b)
    segments = [
        [a, c],
        [c, b]
    ]

    penup()
    goto(*p1)
    pendown()
    fractal(p1,a,iterations-1)
    fractal(a,c,iterations-1)
    fractal(c,b,iterations-1)
    fractal(b,p2,iterations-1)

points = triangle(0,200,-pi/6,0,0, False)[::-1]
line_segments = [[points[i], points[(i+1)%3]] for i in range(3)]
speed(0)
hideturtle()
screen = Screen()
screen.tracer(0)
for a,b in line_segments:
    fractal(a,b,int(sys.argv[1]))

mainloop()
